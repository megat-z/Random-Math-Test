name: Prioritize Test Case Order

on:
  repository_dispatch:
    types: [prioritize-cases]

jobs:
  prioritize-order:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      BRANCH_NAME: ${{ github.event.client_payload.branch }}
      PRN: ${{ github.event.client_payload.pr_number }}
    steps:
      - name: Checkout repository on dispatched branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prioritize test cases
        run: python .github/workflows/prioritize.py

      - name: Commit and push tcp.json if changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add test/tcp.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Prioritize: updated tcp.json"
            git push origin $BRANCH_NAME
          fi

      - name: Load TCP order from file
        id: tcp
        run: |
          TCP_ORDER=$(jq -r '. | join("\n")' test/tcp.json)
          echo "TCP_ORDER<<EOF" >> $GITHUB_OUTPUT
          echo "$TCP_ORDER" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Determine PR number
        id: prn
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -n "${{ env.PRN }}" ]; then
            echo "prn=${{ env.PRN }}" >> $GITHUB_OUTPUT
          else
            # Try to find a PR associated with the branch
            PRN=$(gh pr list --head "${{ env.BRANCH_NAME }}" --state open --json number -q '.[0].number' || echo "")
            echo "prn=${PRN}" >> $GITHUB_OUTPUT
          fi

      - name: Post TCP order as PR comment
        if: ${{ steps.prn.outputs.prn != '' }}
        run: |
          COMMENT="### Latest Test Case Prioritization Order\n${{ steps.tcp.outputs.TCP_ORDER }}"
          gh pr comment ${{ steps.prn.outputs.prn }} --body "$COMMENT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
