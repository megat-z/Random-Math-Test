name: Execute Test Scripts

on:
  repository_dispatch:
    types: [execute-tests]

jobs:
  execute-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      BRANCH_NAME: ${{ github.event.client_payload.branch }}
      TCP_ORDER: ${{ github.event.client_payload.tcp_order }}
      PRN: ${{ github.event.client_payload.pr_number }}
    steps:
      - name: Checkout repository on dispatched branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Execute test scripts (attempt 1) and record results
        id: exec1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EXECUTION_ATTEMPT: "1"
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          PRN: ${{ env.PRN }}
        run: |
          python .github/workflows/execute.py

      - name: Reprioritize in-run (only if any failed)
        if: ${{ steps.exec1.outputs.all_passed != 'true' }}
        run: |
          echo "Attempt 1 had failures; reprioritizing for attempt 2..."
          python .github/workflows/prioritize.py
          echo "New tcp.json computed for attempt 2 (not committed)."

      - name: Execute test scripts (attempt 2) after reprioritization
        if: ${{ steps.exec1.outputs.all_passed != 'true' }}
        id: exec2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EXECUTION_ATTEMPT: "2"
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          PRN: ${{ env.PRN }}
        run: |
          python .github/workflows/execute.py

      - name: Commit new fault matrix/matrices
        # Always try to commit matrices generated by attempts
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add test/fault-matrices/
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Execute: new fault matrix"
            git push origin $BRANCH_NAME
          fi

      - name: Approve PR if all tests passed (any attempt)
        if: ${{ env.PRN != '' && (steps.exec2.outputs.all_passed == 'true' || steps.exec1.outputs.all_passed == 'true') }}
        run: |
          gh pr review $PRN --approve --body "All test cases passed (best of up to 2 prioritized attempts)."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
