name: Execute Test Scripts

on:
  repository_dispatch:
    types: [execute-tests]

jobs:
  execute-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    env:
      BRANCH_NAME: ${{ github.event.client_payload.branch }}
      TCP_ORDER: ${{ github.event.client_payload.tcp_order }}
      PRN: ${{ github.event.client_payload.pr_number }}
    steps:
      - name: Checkout repository on dispatched branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Execute test scripts and record results
        id: exec
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          PRN: ${{ env.PRN }}
        run: |
          python .github/workflows/execute.py

      - name: Commit new fault matrix
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add test/fault-matrices/
          if git diff --cached --quiet; then
            echo "No fault matrix changes to commit."
          else
            git commit -m "Execute: new fault matrix"
            git push origin $BRANCH_NAME
          fi

      - name: Reprioritize with reinforcement learning for next cycle
        if: ${{ steps.exec.outputs.all_passed != 'true' }}
        run: |
          echo "Failures detected; reprioritizing for next execution cycle..."
          python .github/workflows/prioritize.py
          echo "New tcp.json computed (will be committed for next cycle)."

      - name: Commit reprioritized tcp.json for next cycle
        if: ${{ steps.exec.outputs.all_passed != 'true' }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add test/tcp.json
          if git diff --cached --quiet; then
            echo "No changes to tcp.json."
          else
            git commit -m "[skip-execute] Reprioritize: updated tcp.json for next cycle"
            git push origin $BRANCH_NAME
          fi

      - name: Approve PR if all tests passed
        if: ${{ env.PRN != '' && steps.exec.outputs.all_passed == 'true' }}
        run: |
          gh pr review $PRN --approve --body "âœ… All test cases passed in this execution."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
